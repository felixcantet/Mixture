// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#pragma kernel Preview

// Include utility stuff to handle multi-dimension input textures
#include "Packages/com.alelievr.mixture/Runtime/Shaders/MixtureComputeUtils.hlsl"

// By default all RW* structs (RWTexture, RWBuffer, etc) will appear as outputs in the node
// If you don't want this behaviour, you can prefix your variable with '__',
// it will prevent the property to show up in the code input/outputs.
// Note that every property declared after a function won't be visible in the node UI.

Texture2D<float4> _Input;

RWTexture2D<float4> _Output;

float __Hidden;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float4 input = _Input[id.xy];

    // Insert your code here

    _Output[id.xy] = input;
}

// This will be used for the preview Texture in the node
RWTexture2D<float4> _Preview;
float4 _PreviewResolution; // xy is the pixel resolution and zw is 1 / xy

[numthreads(8, 8, 1)]
void Preview(uint3 id : SV_DispatchThreadID)
{
    // You can insert custom preview code here
    _Preview[id.xy] = _Output[id.xy];
}